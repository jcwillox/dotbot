# https://taskfile.dev
version: "3"

tasks:
  default:
    env:
      DRY_RUN: true
      DOTBOT_CONFIG: samples/dotbot.yaml
    cmds:
      - go run ./dotbot {{.CLI_ARGS}}
    silent: true

  run-wsl:
    desc: Run inside WSL
    vars:
      CONFIG: samples/dotbot.yaml
    cmds:
      - wsl -- DRY_RUN=true DOTBOT_CONFIG={{.CONFIG}} go run ./dotbot {{.CLI_ARGS}}
    preconditions:
      - sh: command -v wsl
        msg: "WSL is not installed"
      - sh: wsl -- command -v go
        msg: "go binary is not available in WSL"
    silent: true

  build:
    desc: Build local binary
    vars:
      GOOS: "{{if .GOOS}}{{.GOOS}}{{else}}{{OS}}{{end}}"
      GOARCH: "{{if .GOARCH}}{{.GOARCH}}{{else}}{{ARCH}}{{end}}"
      EXT: "{{if eq .GOOS \"windows\"}}.exe{{else}}{{end}}"
    cmds:
      - go build -o "dotbot.{{.GOOS}}.{{.GOARCH}}{{.EXT}}" ./dotbot
    env:
      GOOS: "{{.GOOS}}"
      GOARCH: "{{.GOARCH}}"

  build-all:
    desc: Build binaries for all platforms
    cmds:
      - goreleaser build --rm-dist --snapshot

  docker:
    desc: Build & run docker container
    cmds:
      - docker build -t dotbot .
      - docker run --rm -ti -v /etc/localtime:/etc/localtime:ro --name dotbot dotbot {{.CLI_ARGS}}

  clean:
    desc: Remove temporary files
    cmds:
      - python ./scripts/clean.py

  add_plugin:
    desc: Scaffolds a new plugin
    cmds:
      - python ./scripts/add_plugin.py {{.CLI_ARGS}}

  completions:
    desc: Regenerate completion files
    cmds:
      - go build -o dotbot.completions ./dotbot
      - dotbot.completions completion bash > ./completions/dotbot.sh
      - dotbot.completions completion zsh > ./completions/dotbot.zsh
      - dotbot.completions completion fish > ./completions/dotbot.fish
      - dotbot.completions completion powershell > ./completions/dotbot.ps1
      - "{{if eq OS \"windows\"}}cmd /c del{{else}}rm{{end}} dotbot.completions"